class Solution {
    public static void newCombination(int index,int target,int[] candidates,List<Integer> ds,List<List<Integer>> ans){
        if(index==candidates.length){
            if(target==0)
                ans.add(new ArrayList<>(ds));
            return;
        }
        if(candidates[index]<=target){
            ds.add(candidates[index]);
            newCombination(index,target-candidates[index],candidates,ds,ans);
            ds.remove(ds.size()-1);
        }
        newCombination(index+1,target,candidates,ds,ans);
            
    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans=new ArrayList<>();
        newCombination(0,target,candidates,new ArrayList<Integer>(),ans);
        return ans;
    }
}
