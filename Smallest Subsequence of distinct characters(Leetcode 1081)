class Solution {
    public String smallestSubsequence(String s) {
        Stack<Character> stk=new Stack<>();
        boolean arr[]=new boolean[26];
        int lastIndex[]=new int[26];
        for(int i=0;i<s.length();i++){
            lastIndex[s.charAt(i)-'a']=i;
        }
        for(int i=0;i<s.length();i++){
            if(arr[s.charAt(i)-'a']==false){
                while(!stk.isEmpty() && s.charAt(i)<stk.peek() && lastIndex[stk.peek()-'a']>i){   
                    arr[stk.peek()-'a']=false;
                    stk.pop();
                }
            stk.push(s.charAt(i));
            arr[s.charAt(i)-'a']=true;
            }            
        }
        StringBuilder sb=new StringBuilder();
        while(!stk.isEmpty()){
            char c=stk.pop();
            sb.append(c);
        }
        return sb.reverse().toString();
    }
}
